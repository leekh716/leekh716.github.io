{"version":3,"sources":["components/Template.js","components/Context.js","components/Write.js","components/View.js","components/ListItem.js","components/List.js","components/Edit.js","App.js","index.js"],"names":["Template","memo","children","className","ItemContext","createContext","state","items","actions","setItems","ItemProvider","useState","useEffect","getStorage","JSON","parse","window","localStorage","getItem","setItem","stringify","value","useMemo","Provider","getWriteTime","date","Date","getFullYear","String","getMonth","padStart","getDate","getHours","getMinutes","getSeconds","Write","useContext","title","text","time","birth","content","setContent","onChange","useCallback","e","nextContent","target","name","onClick","alert","concat","placeholder","to","View","match","params","item","findIndex","page","onRemove","filter","ListItem","index","List","map","Edit","nextItem","splice","defaultValue","App","path","component","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b8aeadc3.chunk.js","sourcesContent":["import { memo } from 'react';\nimport './Template.scss';\n\nconst Template = memo(({ children }) => {\n\treturn (\n\t\t<div className=\"Template\">\n\t\t\t<div className=\"title\"><h2>게시판입니다아아ㅏ아</h2></div>\n\t\t\t<div className=\"contents\">{children}</div>\n\t\t</div>\n\t)\n})\n\nexport default Template;\n","import { createContext, memo, useEffect, useMemo, useState } from \"react\";\n\nconst ItemContext = createContext({\n\tstate: {\n\t\titems: []\n\t},\n\tactions: {\n\t\tsetItems: () => {}\n\t}\n});\n\nconst ItemProvider = memo(({ children }) => {\n\tconst [items, setItems] = useState([]);\n\n\tuseEffect(() => {\n    const getStorage = JSON.parse(window.localStorage.getItem('items'));\n\t\tif (getStorage)\n\t\t\tsetItems(getStorage);\n  }, []);\n\n\tuseEffect(() => {\n    window.localStorage.setItem('items', JSON.stringify(items));\n  }, [items]);\n\n\tconst value = useMemo(() => ({\n\t\tstate: { items },\n\t\tactions: { setItems }\n\t}), [items, setItems]);\n\treturn (\n\t\t<ItemContext.Provider value={value}>\n\t\t\t{children}\n\t\t</ItemContext.Provider>\n\t);\n});\n\nexport { ItemProvider };\n\nexport default ItemContext;\n","import { memo, useCallback, useContext, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport ItemContext from \"./Context\";\nimport './Write.scss';\n\nexport function getWriteTime(){\n\tconst date = new Date()\n\tconst now = `${date.getFullYear()}.${String(date.getMonth() + 1).padStart(2, \" \")}.${String(date.getDate()).padStart(2, \" \")} ${String(date.getHours()).padStart(2, \"0\")}:${String(date.getMinutes()).padStart(2, \"0\")}:${String(date.getSeconds()).padStart(2, \"0\")}`;\n\treturn now\n}\n\nconst Write = memo(() => {\n\tconst { state, actions } = useContext(ItemContext);\n\tconst [content, setContent] = useState({\n\t\ttitle: '',\n\t\ttext: '',\n\t\ttime: '',\n\t\tbirth: '',\n\t});\n\n\tconst onChange = useCallback(e => {\n\t\tconst nextContent = {\n\t\t\t...content,\n\t\t\t[e.target.name]: e.target.value\n\t\t};\n\t\tsetContent(nextContent);\n\t}, [content]);\n\n\tconst onClick = useCallback(() => {\n\t\tif (content.title === '') {\n\t\t\talert('제목을 입력하세요.');\n\t\t}\n\t\telse {\n\t\t\tconst nextContent = {\n\t\t\t\t...content,\n\t\t\t\tbirth: getWriteTime(),\n\t\t\t}\n\t\t\tsetContent(nextContent)\n\t\t\tactions.setItems(state.items.concat(nextContent));\n\t\t}\n\t}, [content, actions, state.items]);\n\n\treturn (\n\t\t<div className=\"Write\">\n\t\t\t<input className=\"WriteTitle\" name=\"title\" onChange={onChange} placeholder=\"제목을 입력하세요.\" />\n\t\t\t<textarea className=\"WriteContent\" name=\"text\" onChange={onChange} placeholder=\"내용을 입력하세요.\" />\n\t\t\t<div className=\"WriteButtons\">\n\t\t\t\t<Link to=\"/\">취소</Link>\n\t\t\t</div>\n\t\t\t<div className=\"WriteButtons\">\n\t\t\t\t<Link to=\"/\" onClick={onClick}>등록</Link>\n\t\t\t</div>\n\t\t</div>\n\t)\n})\n\nexport default Write;\n","import { memo, useCallback, useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport ItemContext from \"./Context\";\nimport './View.scss';\n\nconst View = memo(({ match }) => {\n\tconst { birth } = match.params;\n\tconst { state, actions } = useContext(ItemContext);\n\tconst item = state.items[state.items.findIndex(item => item.birth === birth)];\n\tconst page = `/edit/${item.birth}`;\n\n\tconst onRemove = useCallback(() => {\n\t\tactions.setItems(state.items.filter(item => item.birth !== birth))\n\t}, [actions, state.items, birth]);\n\n\treturn (\n\t\t<div className=\"View\">\n\t\t\t<div className=\"ViewTitle\">Title : {item.title}</div>\n\t\t\t<div className=\"ViewContent\">{item.text}</div>\n\t\t\t<div className=\"ViewTime\">\n\t\t\t\t{item.time && <div>최종 수정 : {item.time}</div>}\n\t\t\t\t<div>최초 작성 : {item.birth}</div>\n\t\t\t</div>\n\t\t\t<div className=\"ViewButtons\">\n\t\t\t\t<Link to=\"/\">목록</Link>\n\t\t\t</div>\n\t\t\t<div className=\"ViewButtons\">\n\t\t\t\t<Link to=\"/\" onClick={onRemove}>삭제</Link>\n\t\t\t</div>\n\t\t\t<div className=\"ViewButtons\">\n\t\t\t\t<Link to={page}>수정</Link>\n\t\t\t</div>\n\t\t</div>\n\t)\n})\n\nexport default View;\n","import { memo } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport './ListItem.scss';\n\nconst ListItem = memo(({ item, index }) => {\n\tconst { title, birth } = item;\n\tconst page = `/view/${item.birth}`;\n\treturn (\n\t\t<div className=\"ListItem\">\n\t\t\t<div className=\"itemNum\">{index}</div>\n\t\t\t<span className=\"itemLink\">\n\t\t\t\t<Link to={page}>{title}</Link>\n\t\t\t</span>\n\t\t\t<span className=\"itemTime\">{birth}</span>\n\t\t</div>\n\t)\n})\n\nexport default ListItem;\n","import { Link } from \"react-router-dom\";\nimport ListItem from \"./ListItem\";\nimport './List.scss';\nimport { memo, useContext } from \"react\";\nimport ItemContext from \"./Context\";\n\nconst List = memo(() => {\n\tconst { state } = useContext(ItemContext);\n\treturn (\n\t\t<div className=\"List-container\">\n\t\t\t<div className=\"ListHead\">\n\t\t\t\t<span className=\"ListId\">번호</span>\n\t\t\t\t<span className=\"ListTitle\">제목</span>\n\t\t\t\t<span className=\"ListTime\">작성일자</span>\n\t\t\t</div>\n\t\t\t<div className=\"List\">\n\t\t\t\t{state.items.map((item, index) => (\n\t\t\t\t\t<ListItem key={item.birth} item={item} index={index + 1}/>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t\t\t<div className=\"writeButton\"><Link to=\"/write\">글쓰기</Link></div>\n\t\t</div>\n\t)\n})\n\nexport default List;\n","import { memo, useCallback, useContext, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport ItemContext from \"./Context\";\nimport { getWriteTime } from \"./Write\";\nimport './Write.scss';\n\nconst Edit = memo(({ match }) => {\n\tconst { state, actions } = useContext(ItemContext);\n\tconst { birth } = match.params;\n\tconst item = state.items[state.items.findIndex(item => item.birth === birth)];\n\n\tconst [content, setContent] = useState({\n\t\ttitle: item.title,\n\t\ttext: item.text,\n\t\ttime: item.time,\n\t\tbirth: item.birth\n\t});\n\n\tconst onChange = useCallback(e => {\n\t\tconst nextContent = {\n\t\t\t...content,\n\t\t\t[e.target.name]: e.target.value\n\t\t};\n\t\tsetContent(nextContent);\n\t}, [content]);\n\n\tconst onClick = useCallback(() => {\n\t\tif (content.title === '') {\n\t\t\talert('제목을 입력하세요.');\n\t\t}\n\t\telse {\n\t\t\tconst nextContent = {\n\t\t\t\t...content,\n\t\t\t\ttime: getWriteTime(),\n\t\t\t}\n\t\t\tsetContent(nextContent)\n\t\t\tconst nextItem = [...state.items];\n\t\t\tnextItem.splice(state.items.findIndex(item => item.birth === birth), 1, nextContent)\n\t\t\tactions.setItems(nextItem);\n\t\t}\n\t}, [content, actions, state.items, birth]);\n\n\treturn (\n\t\t<div className=\"Write\">\n\t\t\t<input className=\"WriteTitle\" name=\"title\" onChange={onChange} defaultValue={item.title} />\n\t\t\t<textarea className=\"WriteContent\" name=\"text\" onChange={onChange} defaultValue={item.text} />\n\t\t\t<div className=\"WriteButtons\">\n\t\t\t\t<Link to=\"/\">취소</Link>\n\t\t\t</div>\n\t\t\t<div className=\"WriteButtons\">\n\t\t\t\t<Link to=\"/\" onClick={onClick}>완료</Link>\n\t\t\t</div>\n\t\t</div>\n\t)\n})\n\nexport default Edit;\n","import './App.css';\nimport { Route } from 'react-router-dom';\nimport Template from './components/Template';\nimport Write from './components/Write';\nimport View from './components/View';\nimport List from './components/List';\nimport { ItemProvider } from './components/Context';\nimport Edit from './components/Edit';\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <ItemProvider>\n        <Template>\n          <Route path=\"/\" component={List} exact/>\n          <Route path=\"/write\" component={Write} />\n          <Route path=\"/view/:birth\" component={View} />\n          <Route path=\"/edit/:birth\" component={Edit} />\n        </Template>\n      </ItemProvider>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}